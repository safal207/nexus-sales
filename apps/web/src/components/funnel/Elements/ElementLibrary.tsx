'use client';

import React from 'react';
import { useDraggable } from '@dnd-kit/core';
import { useFunnelStore } from '../../../stores/funnelStore';

interface ElementTemplate {
  type: 'text' | 'button' | 'form' | 'image' | 'video';
  name: string;
  icon: string;
  description: string;
  defaultContent: {
    text?: string;
    src?: string;
    alt?: string;
    placeholder?: string;
  };
  defaultSize: { width: number; height: number };
}

const ELEMENT_TEMPLATES: ElementTemplate[] = [
  {
    type: 'text',
    name: '–¢–µ–∫—Å—Ç',
    icon: 'üìù',
    description: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –æ–ø–∏—Å–∞–Ω–∏–π',
    defaultContent: { text: '–í–∞—à —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å' },
    defaultSize: { width: 300, height: 100 },
  },
  {
    type: 'button',
    name: '–ö–Ω–æ–ø–∫–∞',
    icon: 'üîò',
    description: '–ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–∑—ã–≤–∞ –∫ –¥–µ–π—Å—Ç–≤–∏—é',
    defaultContent: { text: '–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å' },
    defaultSize: { width: 200, height: 50 },
  },
  {
    type: 'form',
    name: '–§–æ—Ä–º–∞',
    icon: 'üìã',
    description: '–§–æ—Ä–º–∞ –¥–ª—è —Å–±–æ—Ä–∞ email –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö',
    defaultContent: {
      placeholder: 'your@email.com',
      text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'
    },
    defaultSize: { width: 400, height: 200 },
  },
  {
    type: 'image',
    name: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    icon: 'üñºÔ∏è',
    description: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≥—Ä–∞—Ñ–∏–∫–∞',
    defaultContent: { alt: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' },
    defaultSize: { width: 300, height: 200 },
  },
  {
    type: 'video',
    name: '–í–∏–¥–µ–æ',
    icon: 'üé•',
    description: '–í–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç',
    defaultContent: {},
    defaultSize: { width: 400, height: 225 },
  },
];

interface DraggableElementProps {
  template: ElementTemplate;
}

const DraggableElement: React.FC<DraggableElementProps> = ({ template }) => {
  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({
    id: `template-${template.type}`,
    data: {
      type: 'element-template',
      template,
    },
  });

  const style = transform ? {
    transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,
  } : undefined;

  return (
    <div
      ref={setNodeRef}
      style={style}
      {...listeners}
      {...attributes}
      className={`
        p-4 bg-white border border-gray-200 rounded-lg cursor-grab hover:shadow-md transition-all
        ${isDragging ? 'opacity-50 scale-105 shadow-lg' : ''}
      `}
    >
      <div className="flex items-center space-x-3 mb-2">
        <span className="text-2xl">{template.icon}</span>
        <div>
          <h3 className="font-medium text-gray-900">{template.name}</h3>
          <p className="text-sm text-gray-500">{template.description}</p>
        </div>
      </div>
    </div>
  );
};

export const ElementLibrary: React.FC = () => {
  return (
    <div className="w-80 bg-white border-r border-gray-200 p-4 overflow-y-auto">
      <div className="mb-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-2">
          –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        </h2>
        <p className="text-sm text-gray-600">
          –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Ö–æ–ª—Å—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ—Ä–æ–Ω–∫–∏
        </p>
      </div>

      <div className="space-y-3">
        {ELEMENT_TEMPLATES.map((template) => (
          <DraggableElement key={template.type} template={template} />
        ))}
      </div>

      <div className="mt-6 pt-4 border-t border-gray-200">
        <h3 className="font-medium text-gray-900 mb-2">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
        <div className="space-y-2">
          <button
            onClick={() => {
              // –°–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Ü–µ–Ω—Ç—Ä–µ canvas
              const centerX = 400;
              const centerY = 300;
              useFunnelStore.getState().addElement('current-step', {
                type: 'text',
                content: { text: '–ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç' },
                position: { x: centerX, y: centerY },
                size: { width: 300, height: 100 },
                styles: {},
                settings: {},
              });
            }}
            className="w-full p-2 text-left text-sm text-gray-700 hover:bg-gray-50 rounded"
          >
            ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç
          </button>
          <button
            onClick={() => {
              const centerX = 400;
              const centerY = 300;
              useFunnelStore.getState().addElement('current-step', {
                type: 'button',
                content: { text: '–ö–Ω–æ–ø–∫–∞' },
                position: { x: centerX, y: centerY },
                size: { width: 200, height: 50 },
                styles: {},
                settings: { action: 'redirect', redirect: '/checkout' },
              });
            }}
            className="w-full p-2 text-left text-sm text-gray-700 hover:bg-gray-50 rounded"
          >
            üîò –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
          </button>
        </div>
      </div>
    </div>
  );
};
